# This is a basic workflow to help you get started with Actions

name: CI Tests and linters

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Setup Python and Poetry
        # You may pin to the exact commit or the version.
        # uses: ITProKyle/action-setup-python@98e1bad5dbbb801e5c75de4cfc084c3e35d16572
        uses: ITProKyle/action-setup-python@v0.1.0
        with:
          # The target architecture (x86, x64) of the Python interpreter.
#           architecture: # optional
          # Temporary input to allow for slight customization of the cache key until full customization can be provided.
#           cache-key-suffix: # optional
          # Allow install of prerelease versions of Poetry.
#           poetry-preview: # optional
          # Poetry version to use. If version is not provided then latest stable version will be used.
          poetry-version: 1.1.13# optional
          # Version range or exact version of a Python version to use, using semver version range syntax.
          python-version: 3.9# optional, default is 3.x
          # Used to pull python distributions from actions/python-versions. Since there's a default, this is typically not supplied by the user.
#           token: # optional, default is ${{ github.token }}

#       - name: Set up Python 3.9
#         uses: actions/setup-python@v3.1.2
#         with:
#           python-version: 3.9
        
#       - name: Setup Poetry
#         # You may pin to the exact commit or the version.
#         # uses: Gr1N/setup-poetry@09236184f6c1ab47c0dc9c1001c7fe200cf2afb0
#         uses: Gr1N/setup-poetry@v7
#         with:
#           # Allow to install prerelease versions of Poetry
#           poetry-preview: False # optional, default is false
#           # Poetry version to use, if version is not provided then latest stable version will be used
#           poetry-version: 1.1.13 # optional

#       - name: Cache Poetry virtualenv
#         uses: actions/cache@v1
#         id: cache
#         with:
#           path: ~/.virtualenvs
#           key: poetry-${{ hashFiles('**/poetry.lock') }}
#           restore-keys: |
#             poetry-${{ hashFiles('**/poetry.lock') }}

#       - name: Install Dependencies
#         run: poetry install
#         if: steps.cache.outputs.cache-hit != 'true'

      - name: Code Quality
        run: poetry run black src tests noxfile.py --check
        
      - name: Flake8
        run: poetry run flake8 src tests noxfile.py
        
      - name: Mypy
        run: poetry run mypy src tests noxfile.py

      - name: Test with pytest
        run: poetry run pytest
